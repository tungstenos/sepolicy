;; SPDX-FileCopyrightText: Â© 2025 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block mod

  (filecon "/usr/lib/modules" dir file_context)
  (filecon "/usr/lib/modules/.*" any file_context)

  (macro auditwriteaccess_file_dirs ((type ARG1))
         (allow ARG1 file (dir (getattr write))))

  (macro lib_file_type_transition_file ((type ARG1))
         (call .lib.file_type_transition
               (ARG1 file dir "modules")))

  (blockinherit .file.macro_template_dirs)
  (blockinherit .file.macro_template_lnk_files)
  (blockinherit .file.mod.template))

(in file

    (block mod

      (macro getattr_all_files ((type ARG1))
             (allow ARG1 typeattr (file (getattr))))

      (macro load_all_files ((type ARG1))
             (allow ARG1 typeattr (system (module_load))))

      (macro map_all_files ((type ARG1))
             (allow ARG1 typeattr (file (map))))

      (macro type ((type ARG1))
             (typeattributeset typeattr ARG1))

      (blockinherit file.all_macro_template_files)

      (typeattribute typeattr)

      (call data.type (typeattr))

      (block base_template

        (blockabstract base_template)

        (blockinherit .file.base_template)

        (call .file.mod.type (file)))

      (block template

        (blockabstract template)

        (macro load_file_files ((type ARG1))
               (allow ARG1 file (system (module_load))))

        (macro map_file_files ((type ARG1))
               (allow ARG1 file (file (map))))

        (blockinherit .file.macro_template_files)
        (blockinherit .file.mod.base_template))))

(in file.unconfined

    (call .mod.lib_file_type_transition_file (typeattr)))

(in kernel.moduleload

    (neverallow not_typeattr .file.mod.typeattr (system (module_load))))

(in kernel.unconfined

    (call .file.mod.load_all_files (typeattr)))
