;; SPDX-FileCopyrightText: Â© 2025 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block cache

  (filecon "/var/cache" dir file_context)
  (filecon "/var/cache/.*" any file_context)

  (macro var_file_type_transition_file ((type ARG1))
         (call .var.file_type_transition
               (ARG1 file dir "cache")))

  (blockinherit .file.cache.template)

  (optional cachefile_mount
            (call .mount.mountpoint.type (file)))

  (block search_file_pattern

    (macro type ((type ARG1))
           (typeattributeset typeattr ARG1))

    (typeattribute typeattr)

    (call search_file_dirs (typeattr))

    (call .var.search_file_pattern.type (typeattr)))

  (block traverse_file_pattern

    (macro type ((type ARG1))
           (typeattributeset typeattr ARG1))

    (typeattribute typeattr)

    (call read_file_lnk_files (typeattr))
    (call search_file_pattern.type (typeattr))))

(in file

    (block cache

      (macro type ((type ARG1))
             (typeattributeset typeattr ARG1))

      (blockinherit file.all_macro_template_dirs)
      (blockinherit file.all_macro_template_files)
      (blockinherit file.all_macro_template_lnk_files)

      (typeattribute typeattr)

      (call var.type (typeattr))

      (block base_template

        (blockabstract base_template)

        (blockinherit .file.var.base_template)

        (call .file.cache.type (file)))

      (block template

        (blockabstract template)

        (blockinherit .file.cache.base_template)
        (blockinherit .file.macro_template_dirs)
        (blockinherit .file.macro_template_files)
        (blockinherit .file.macro_template_lnk_files))))

(in file.unconfined

    (call .cache.var_file_type_transition_file (typeattr)))
