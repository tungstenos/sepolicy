;; SPDX-FileCopyrightText: 2025 Rahul Sandhu <nvraxn@gmail.com>
;; SPDX-License-Identifier: MIT

(in sys

    (macro anon_agent ((type ARG1)(type ARG2))
           (call agent.exec.type (ARG1))
           (call agent.type (ARG2))

           (call .agent.anon_subj_type_transition (subj ARG1 ARG2)))

    (block agent

      (macro type ((type ARG1))
             (typeattributeset typeattr ARG1))

      (blockinherit .subj.all_macro_template)

      (typeattribute typeattr)
      (roletype sys.role typeattr)

      (call sys.readwriteinherited_subj_fifo_files (typeattr))

      (call sys.home.search_file_pattern.type (typeattr))

      (call .agent.type (typeattr))

      (tunableif sysadmin
                 (true

                  ;; Some sysagents may have privileged children which are not
                  ;; sys.role and are constrained by rbacsep. So that they may
                  ;; interact with their parent, sysagents must be an rbacsep
                  ;; exemption target.
                  (call .rbacsep.exemptsource.type (typeattr))))

      (block exec

        (macro auditexecuteaccess_all_files ((type ARG1))
               (allow ARG1 typeattr (file (getattr execute))))

        (macro entrypoint_all_files ((type ARG1))
               (allow ARG1 typeattr (file (entrypoint))))

        (macro map_all_files ((type ARG1))
               (allow ARG1 typeattr (file (map))))

        (macro type ((type ARG1))
               (typeattributeset typeattr ARG1))

        (blockinherit .file.all_macro_template_files)

        (typeattribute typeattr)

        (call .agent.exec.type (typeattr)))

      (block template

        (blockabstract template)

        (blockinherit .agent.template)

        ;; sysagents are started by systemd
        (call exec.subj_type_transition (.sys.subj subj))

        (call .sys.agent.exec.type (exec.file))
        (call .sys.agent.type (subj)))))
