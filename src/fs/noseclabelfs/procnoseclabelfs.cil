;; SPDX-FileCopyrightText: Â© 2025 Dominick Grift <dominick.grift@defensec.nl>
;; SPDX-License-Identifier: Unlicense

(block proc

  (filecon "/proc" dir fs_context)
  (filecon "/proc/.*" any ())

  (genfscon "proc" "/" fs_context)

  (macro dontaudit_associate_fs ((type ARG1))
         (dontaudit ARG1 fs (filesystem (associate))))

  (macro dontaudit_setattr_fs_dirs ((type ARG1))
         (dontaudit ARG1 fs (dir (setattr))))

  (macro root_file_type_transition_fs ((type ARG1))
         (call .root.file_type_transition
               (ARG1 fs dir "proc")))

  (macro setattr_fs_dirs ((type ARG1))
         (allow ARG1 fs (dir (setattr))))

  (blockinherit .fs.macro_template_lnk_files)
  (blockinherit .noseclabelfs.template)

  (call .xattr.associate_fs_pattern.type (fs))

  (block getattr_fs_pattern

    (macro type ((type ARG1))
           (typeattributeset typeattr ARG1))

    (typeattribute typeattr)

    (allow typeattr fs (filesystem (getattr)))

    (call .proc.search_fs_pattern.type (typeattr)))

  (block search_fs_pattern

    (macro type ((type ARG1))
           (typeattributeset typeattr ARG1))

    (typeattribute typeattr)

    (call search_fs_dirs (typeattr))

    (call .root.search_file_pattern.type (typeattr)))

  (block traverse_fs_pattern

    (macro type ((type ARG1))
           (typeattributeset typeattr ARG1))

    (typeattribute typeattr)

    (call read_fs_lnk_files (typeattr))
    (call search_fs_pattern.type (typeattr))))

(in fs.unconfined

    (call .proc.root_file_type_transition_fs (typeattr)))
